#!/usr/bin/perl -w
use strict;

use File::Spec ();

use Getopt::Std;
my %opts;
getopts 'p', \%opts;

my $start_dir = File::Spec->curdir();

for my $dir (@ARGV) {

  my @dirbits = File::Spec->splitdir($dir);

  # start directory build from working directory for relative paths,
  # root directory for absolute paths
  my $parent = $start_dir;
  if ( $dirbits[0] eq '' ) {
    $parent = File::Spec->rootdir();
    shift @dirbits;
  }
  chdir $parent;

  # KLUGE // in pathes add empty bits to the list, evict
  @dirbits = grep { defined and $_ ne '' } @dirbits;

  # work through dirbits, as not all mkdir support -p, and do special
  # things under CVS and Subversion sandboxes
  for my $dirbit (@dirbits) {
    goto NEXTDIR if -d $dirbit;

    if ( -f File::Spec->catfile(qw{CVS Root}) ) {
      # CVS: add dir automagically
      mkdir $dirbit;
      system qw{cvs -Q add}, $dirbit;

    } elsif ( -f File::Spec->catfile(qw{.svn entries}) ) {
      # SVN: use mkdir subcommand
      system qw{svn mkdir}, $dirbit;

    } else {
      mkdir $dirbit;

    }

   NEXTDIR: chdir $dirbit;
  }

  print $dir, $/ if exists $opts{p};
}
