#!/usr/bin/perl -w
#
# $Id$
#
# The author disclaims all copyrights and releases this script into the
# public domain.
#
# Pick or reject items from a list of input data.

require 5;
use strict;

my $VERSION;
($VERSION = '$Revision$ ') =~ s/[^0-9.]//g;

# specifications for getraw utility
my $specs = {
  y => 'Yy\ \n:+ Nn:-',
  n => 'Nn\ \n:- Yy:+'
};
my $spec = $specs->{y};

use Getopt::Std;
my %opts;
getopts('h?yno:d:', \%opts);
help() if exists $opts{'h'} or exists $opts{'?'};

if (exists $opts{n}) {
  $spec = $specs->{n};
} elsif (exists $opts{o}) {
  $spec = $opts{o};
}

# TODO how default to reading on \n, otherwise -d otherwise -e ?
$/ = $opts{d} if exists $opts{d};

my ($last, $lastprinted);
my $count = 0;

# unbuffer output to play well when in a pipe chain?
$| = 1;

while (<>) {
  $last = $_;
  system qw(getraw -o), $spec;
  if (0 == $? >> 8) {
    $count++;
    $lastprinted = $_;
    print;
  }
}

# KLUGE replicate trailing \n on data if line with trailing \n
# rejected (attempts workaround an 'echo a b c' -> c\n dropped -> no
# \n after b problem)
if (  $count
  and $last ne $lastprinted
  and $last =~ /\n$/
  and $lastprinted !~ /\n$/) {
  print "\n";
}

# TODO only warn if verbose on?  use special exit code to denote
# nothing printed?
unless ($count) {
  die "notice: no lines printed\n";
}

exit 0;

######################################################################
#
# SUBROUTINES

# a generic help blarb
sub help {
  print <<"HELP";
Usage: $0 [opts]

Pick or reject items from a list of input data.

Options for version $VERSION:
  -h/-?  Display this message.

  -d dd  Split records on dd instead of default (\$/).

  -y     Default to "yes" to accept item with space/return.
  -n     Default to "no" to skip item.

  -o ss  Custom key mapping specification.

Run perldoc(1) on this script for additional documentation.

HELP
  exit;
}

=head1 NAME

pick - pick or reject items from a list of input data

=head1 SYNOPSIS

  $ echo a b c | pick

=head1 DESCRIPTION

=head2 Overview

Allows items in input data to be selected or rejected, to reduce the
list to just the items required.

=head2 Normal Usage

  $ pick [options]

See L<"OPTIONS"> for details on the command line switches supported.

=head1 OPTIONS

This script currently supports the following command line switches:

=over 4

=item B<-h>, B<-?>

Prints a brief usage note.

=item B<-y>

Default to accepting items, Nn to reject.

=item B<-n>

Default to rejecting items, Yy to accept.

=item B<-o> I<specification>

Custom specification to pass to getraw.

=back

=head1 BUGS

=head2 Reporting Bugs

Newer versions of this script may be available from:

http://www.sial.org/code/perl/

If the bug is in the latest version, send a report to the author.
Patches that fix problems or add new features are welcome.

=head2 Known Issues

No known issues.

=head1 SEE ALSO

perl(1)

=head1 AUTHOR

Jeremy Mates, http://www.sial.org/contact/

=head1 COPYRIGHT

The author disclaims all copyrights and releases this script into the
public domain.

=head1 SEE ALSO

perl(1)

=head1 AUTHOR

Jeremy Mates, http://www.sial.org/contact/

=head1 COPYRIGHT

The author disclaims all copyrights and releases this script into the
public domain.

=head1 VERSION

  $Id$

=cut

