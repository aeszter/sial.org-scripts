#!/usr/bin/perl -w
use strict;

# KLUGE supposed to mark filehandles, so would have to muck around with
# converting whatever the XML is in into utf8 or something... (this
# avoids a 'Wide character in ...' warning)
no warnings 'utf8';

use Getopt::Std;
my %opts;
getopts 'h?p:', \%opts;
help() if exists $opts{h} or exists $opts{?};

$opts{p} = 'XML' unless exists $opts{p};

# figure out where document lives
my $document = shift || help();
use URI;
my $target = URI->new($document);
my $file;

# XPath query to search document for
my $query = shift || help();

# get document into filehandle
# TODO URL lookup needs more error checking
if ($target->scheme) {
  use File::Temp;
  $file = (
    File::Temp::tempfile(
      "xquery.XXXXXX",
      DIR    => File::Spec->tmpdir,
      UNLINK => 1
    )
  )[1];

  use LWP::UserAgent;
  my $ua = LWP::UserAgent->new(env_proxy => 1, keep_alive => 0, timeout => 30);
  $ua->agent($ENV{http_agent}) if exists $ENV{http_agent};
  my $response = $ua->get($target->canonical, ':content_file' => $file);
} else {
  $file = $target->canonical;
}

use XML::LibXML;
my $parser = XML::LibXML->new;

# try to allow for crummy *ML documents
# TODO make these command line arguments?
$parser->recover(1);
$parser->load_ext_dtd(0);
$parser->expand_entities(0);
$parser->complete_attributes(0);

my $doc;
eval {
  my %parse_method = (
    XML  => 'parse_file',
    HTML => 'parse_html_file',
    SGML => 'parse_sgml_file',
  );

  my $method = $parse_method{uc $opts{p}} || 'parse_file';
  $doc = $parser->$method($file)
};
if ($@) {
  die "error: could not parse $document: $@\n";
}

# search resulting tree with XPath
use XML::LibXML::XPathContext;
my $xc = XML::LibXML::XPathContext->new($doc);

my $nodelist = $xc->find($query);
for my $node ($nodelist->get_nodelist) {
  print $node->toString, "\n";
}

sub help {
  print <<"HELP";
Usage: $0 [opts] document xpath-query

Run XPath expressions against the specified document.

Options:
  -h/-?  Display this message

  -p xx  Parse using method xx (XML, HTML, SGML). Default is XML.

HELP
  exit 100;
}
