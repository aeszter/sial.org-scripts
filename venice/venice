#!/usr/bin/perl
#
# $Id$
#
# Runs named command with higher priority, but without running the
# command as superuser. Uses fork/exec and exec sudo from the parent to
# both launch the child application and renice the child.
#
# Example: venice open -a D2X
#
# On Mac OS X launches "Descent2 X" and renices it to a -10 priority.

my $default_nice = -10;
my $nice_value   = $default_nice;

use File::Basename qw(basename);
my $command = basename $0;

# TODO figure out "-n 20 -h" handling. grrr!!@#$
while ( my $arg = shift @ARGV ) {
  if ( $arg eq '-?' or $arg =~ m/-h/ ) {
    print_help();
  } elsif ( $arg eq '-n' ) {
    $nice_value = shift @ARGV;
  }
  last unless $ARGV[0] =~ /^-(?!-$)/;
}

print_help() unless @ARGV;

if ( $nice_value !~ m/^-?\d\d?$/ or $nice_value > 20 or $nice_value < -20 ) {
  warn "warning: nice value invalid, reverting to default\n";
  $nice_value = $default_nice;
}

# parent will not be waiting on child
$SIG{CHLD} = 'IGNORE';

# ensure password not prompted for after forking
system qw(sudo -v);

if ( my $child_pid = fork ) {
  select undef, undef, undef, 0.25;
  exec qw(sudo renice $nice_value -p $child_pid) if kill 0, $child_pid;
  warn "error: could not renice: errno=$!\n" unless $! eq 'No such process';
} else {
  exec @ARGV;
  warn "error: could not exec command: errno=$!\n";
}

sub print_help {
  warn "usage: $command [-n increment] -- utility [argument ...]\n";
  exit 100;
}
