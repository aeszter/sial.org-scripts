#!/bin/sh
#
# $Id$
#
# The author disclaims all copyrights and releases this script into the
# public domain.
#
# Wrapper to do CVS "update" or Subversion "status"/"update" on working
# directories as appropriate. Add -f "force" argument to do cvs up -Ad
# or svn update.
#
# Used to be called 'up' but that conflicts with a tool from OpenAFS.

# should be 0, if errors will be that of last error to occur
RETURN=0

WHATDIR=`pwd`

# update routines for specific packages
# takes dirctory (already cd'ed into) and type of update

# for CVS
update_cvs () {
  [ $WHATDIR != $1 ] && echo "info: cvs update in $1" >&2
  CVSUPARGS=
  if [ "is$FORCE" = "isyes" ]; then
    CVSUPARGS=-Ad
  fi
  cvs up $CVSUPARGS
  STATUS=$?
  if [ $STATUS -ne 0 ]; then
    echo "warn: bad exit status ($STATUS) from $2 update on $1" >&2
    RETURN=$STATUS
  fi
}

# for subversion
update_svn () {
  [ $WHATDIR != $1 ] && echo "info: svn update in $1" >&2
  if [ "is$FORCE" = "isyes" ]; then
    svn update
  else
    svn status
  fi
  STATUS=$?
  if [ $STATUS -ne 0 ]; then
    echo "warn: bad exit status ($STATUS) from $2 update on $1" >&2
    RETURN=$STATUS
  fi
}

# figure out how to handle the directory in question
check_dir () {
  if [ -f CVS/Root ]; then
    update_cvs "$1" "CVS"
  elif [ -f .svn/entries ]; then
    update_svn "$1" "svn"
  else
    IFS='
'
    for file in `subdir`; do
      (
        cd -- "$file"
        check_dir "$file"
      )
    done
  fi
}

OPT=
FORCE=
while getopts f OPT; do
  case $OPT in
    f)
      FORCE=yes
    ;;
  esac
done
shift $(($OPTIND - 1))

if [ $# -eq 0 ]; then
  check_dir "$WHATDIR"
else
  for file in "$@"; do
    if [ -d "$file" ]; then
      (
        cd "$file"
        check_dir "$file"
      )
    fi
  done
fi

exit $RETURN
